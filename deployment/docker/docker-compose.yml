version: '3.8'

services:
  # 本地Docker Registry
  registry:
    image: registry:2
    container_name: local-registry
    ports:
      - "5000:5000"
    volumes:
      - registry-data:/var/lib/registry
    restart: unless-stopped

  # Jenkins
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ../../jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    restart: unless-stopped
    user: root

  # PostgreSQL 数据库（用于后端）
  postgres:
    image: postgres:15-alpine
    container_name: sical-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sical
      POSTGRES_USER: sical
      POSTGRES_PASSWORD: sical123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: sical-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # Nginx Ingress Controller (模拟K8s Ingress)
  nginx:
    image: nginx:alpine
    container_name: sical-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
    restart: unless-stopped

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sical-frontend
    ports:
      - "3000:80"
    restart: unless-stopped

volumes:
  registry-data:
  jenkins-data:
  postgres-data:
  redis-data:

networks:
  default:
    name: sical-network